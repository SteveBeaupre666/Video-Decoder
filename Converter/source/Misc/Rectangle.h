#pragma once

#include <Windows.h>
#include <stdio.h>

template <class T> class CRect {
public:
	CRect();
	CRect(T l, T t, T r, T b);
private:
	T Left;
	T Right;
	T Top;
	T Bottom;
	T Width;
	T Height;
private:
	void Swap(T &a, T &b);
	void BuildRect(T l, T t, T r, T b);
public:
	T GetLeft();
	T GetRight();
	T GetTop();
	T GetBottom();

	T GetWidth();
	T GetHeight();
	
	void GetPos(T &l, T &t);
	void GetSize(T &w, T &h);
	void GetRect(T &l, T &t, T &r, T &b);
	void GetRect(T &l, T &t, T &r, T &b, T &w, T &h);
public:
	void SetLeft(T l);
	void SetRight(T r);
	void SetTop(T t);
	void SetBottom(T b);

	void SetWidth(T w);
	void SetHeight(T h);

	void SetPos(T l, T t);
	void SetSize(T w, T h);
	void SetRect(T l, T t, T r, T b);
public:
	void  Reset();
	void  Scale(T s);
	void  Translate(T x, T y);
	float GetRatio();
};

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> CRect<T>::CRect()
{
	Reset();
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> CRect<T>::CRect(T l, T t, T r, T b)
{
	Reset();
	BuildRect(l, t, r, b);
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> void CRect<T>::Reset()
{
	Left   = 0;
	Right  = 0;
	Top    = 0;
	Bottom = 0;
	Width  = 0;
	Height = 0;
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> void CRect<T>::Swap(T &a, T &b)
{
	T t = a;
	a = b;
	b = t;
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> void CRect<T>::BuildRect(T l, T t, T r, T b)
{
	if(l > r){Swap(l, r);}
	if(t > b){Swap(t, b);}
		
	Left   = l;
	Right  = r;
	Top    = t;
	Bottom = b;
	Width  = r - l;
	Height = b - t;
}

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> T CRect<T>::GetLeft()
{
	return Left;
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> T CRect<T>::GetRight()
{
	return Right;
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> T CRect<T>::GetTop()
{
	return Top;
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> T CRect<T>::GetBottom()
{
	return Bottom;
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> T CRect<T>::GetWidth()
{
	return Width;
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> T CRect<T>::GetHeight()
{
	return Height;
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> void CRect<T>::GetPos(T &l, T &t)
{
	l = Left;
	t = Top;
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> void CRect<T>::GetSize(T &w, T &h)
{
	w = Width;
	h = Height;
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> void CRect<T>::GetRect(T &l, T &t, T &r, T &b)
{
	l = Left;
	t = Top;
	r = Right;
	b = Bottom;
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> void CRect<T>::GetRect(T &l, T &t, T &r, T &b, T &w, T &h)
{
	l = Left;
	t = Top;
	r = Right;
	b = Bottom;
	w = Width;
	h = Height;
}

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> void CRect<T>::SetLeft(T l)
{
	BuildRect(l, Top, l + Width, Bottom);
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> void CRect<T>::SetRight(T r)
{
	BuildRect(Left, Top, r, Bottom);
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> void CRect<T>::SetTop(T t)
{
	BuildRect(Left, t, Right, t + Height);
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> void CRect<T>::SetBottom(T b)
{
	BuildRect(Left, Top, Right, b);
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> void CRect<T>::SetWidth(T w)
{
	BuildRect(Left, Top, Left + w, Bottom);
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> void CRect<T>::SetHeight(T h)
{
	BuildRect(Left, Top, Right, Top + h);
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> void CRect<T>::SetPos(T l, T t)
{
	BuildRect(l, t, l + Width, t + Height);
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> void CRect<T>::SetSize(T w, T h)
{
	BuildRect(Left, Top, Left + w, Top + h);
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> void CRect<T>::SetRect(T l, T t, T r, T b)
{
	BuildRect(l, t, r, b);
}

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> void CRect<T>::Scale(T s)
{
	BuildRect(Left, Top, Left + (Width * s), Top + (Height * s));
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> void CRect<T>::Translate(T x, T y)
{
	BuildRect(Left + x, Top + y, Right + x, Bottom + y);
}

///////////////////////////////////////////////////////////////////////////////////////////////

template <class T> float CRect<T>::GetRatio()
{
	return (float)Width / (float)Height;
}

