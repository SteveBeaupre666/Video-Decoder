#include "CodecContext.h"

///////////////////////////////////////////////////////////////////////////////////////////////

CCodecContext::CCodecContext()
{
	Initialize();
}

///////////////////////////////////////////////////////////////////////////////////////////////

CCodecContext::~CCodecContext()
{
	Free();
}

///////////////////////////////////////////////////////////////////////////////////////////////

void CCodecContext::Initialize()
{
	Codec    = NULL;
	CodecCtx = NULL;
}

///////////////////////////////////////////////////////////////////////////////////////////////

AVCodec* CCodecContext::GetCodec()
{
	return Codec;
}

///////////////////////////////////////////////////////////////////////////////////////////////

AVCodecContext* CCodecContext::GetCtx()
{
	return CodecCtx;
}

///////////////////////////////////////////////////////////////////////////////////////////////

bool CCodecContext::Alloc()
{
	Free();

	CodecCtx  = avcodec_alloc_context3(Codec);
	Allocated = CodecCtx != NULL;

	return CodecCtx != NULL;
}

///////////////////////////////////////////////////////////////////////////////////////////////

void CCodecContext::Free()
{
	if(CodecCtx){
		av_free(&CodecCtx);
		Initialize();
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////

bool CCodecContext::Open()
{
	if(!Codec || !CodecCtx)
		return false;

	int res = avcodec_open2(CodecCtx, Codec, NULL);
	return res >= 0;
}

///////////////////////////////////////////////////////////////////////////////////////////////

void CCodecContext::Close()
{
	if(CodecCtx)
		avcodec_close(CodecCtx);
}

///////////////////////////////////////////////////////////////////////////////////////////////

bool CCodecContext::GetFromStream(AVStream* stream)
{
	CodecCtx = stream->codec;
	return CodecCtx != NULL;
}

///////////////////////////////////////////////////////////////////////////////////////////////

bool CCodecContext::FindDecoder()
{
	if(!CodecCtx)
		return false;

	Codec = avcodec_find_decoder(CodecCtx->codec_id);
	return Codec != NULL;
}

///////////////////////////////////////////////////////////////////////////////////////////////

bool CCodecContext::FindEncoder(AVCodecID id)
{
	Codec = avcodec_find_encoder(id);
	return Codec != NULL;
}

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
/*
int CCodecContext::GetWidth()
{
	return CodecCtx->width;
}

///////////////////////////////////////////////////////////////////////////////////////////////

int CCodecContext::GetHeight()
{
	return CodecCtx->height;
}

///////////////////////////////////////////////////////////////////////////////////////////////

void CCodecContext::GetSize(int &w, int &h)
{
	w = CodecCtx->width;
	h = CodecCtx->height;
}

///////////////////////////////////////////////////////////////////////////////////////////////

void CCodecContext::SetSize(int w, int h)
{
	CodecCtx->width  = w;
	CodecCtx->height = h;
}

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

void CVideoDecoder::Setup()
{

}

///////////////////////////////////////////////////////////////////////////////////////////////

void CVideoDecoder::FreeContext()
{
	if(CodecCtx)
		avcodec_close(CodecCtx);

	Initialize();
}

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

void CVideoEncoder::Setup(int width, int height, int bitrate, AVRational framerate, int gop_size, int max_b_frames, AVPixelFormat pix_fmt)
{
	CodecCtx->width  = width;
	CodecCtx->height = height;

	CodecCtx->bit_rate  = bitrate;
	CodecCtx->time_base = framerate;

	CodecCtx->pix_fmt      = pix_fmt;
	CodecCtx->gop_size     = gop_size;
	CodecCtx->max_b_frames = max_b_frames;
}

///////////////////////////////////////////////////////////////////////////////////////////////

void CVideoEncoder::FreeContext()
{
	if(CodecCtx){
		avcodec_close(CodecCtx);
		av_free(&CodecCtx);
	}

	Initialize();
}

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

void CAudioDecoder::FreeContext()
{
	if(CodecCtx)
		avcodec_close(CodecCtx);

	Initialize();
}

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

void CAudioEncoder::FreeContext()
{
	if(CodecCtx){
		avcodec_close(CodecCtx);
		av_free(&CodecCtx);
	}

	Initialize();
}
*/